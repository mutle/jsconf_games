{
  "presentation": {
    "title": "Using canvas to develop classic 2D games",
    "author": "Mutwin Kraus (@mutle)"
  },
  "slides": [
    "Hi!",
    {"title": "How to develop games with canvas", "text":"by Mutwin Kraus"},
    "Me",
    "Mutwin Kraus<br /><br />Twitter: @mutle<br />Github: http://github.com/mutle",
    {"title": "ScummVM", "iframe":"http://scummvm.org", "text":"<span class='small'>http://scummvm.org/</span>"},
    "My first Open Source experience",
    "Almost 10 years ago",
    {"title": "Now: ScummVM running in pure JavaScript", "video": "jsscummvm.m4v"},
    "Why?",
    "To see if the Browser can be used as a gaming platform",
    "Answer: Yes*<br /><br /><span class='small'>* with some limitations</span>",
    "Ok, then let's build a game",
    "Chapter 1: Graphics",
    {"title": "Start with a blank &lt;canvas&gt;", "iframe": "example.html?step=0", "code": "var canvas = $('canvas').get(0);\nvar context = canvas.getContext('2d');"},
    "Canvas drawImage() function",
    "drawImage(image, target.x, target.y, target.width, target.height);",
    "drawImage(image, source.x, source.y, source.width, source.height, target.x, target.y, target.width, target.height);",
    {"title": "Add a background image", "iframe": "example.html?step=1", "code": "var image = new Image();\nimage.src = 'images/background.png';\nimage.onload = function() {\n  <strong>context.drawImage(image, 0, 0, image.width, image.height);</strong>\n}\n"},
    {"title": "Add a sprite", "iframe": "example.html?step=2", "code": "var sprite = new sprite();\nsprite.src = 'sprites/sprite.png';\nsprite.onload = function() {\n <strong>context.drawImage(sprite,\n    sprite_frame.x, sprite_frame.y, sprite_frame.width, sprite_frame.height,\n    sprite.x, sprite.y, sprite_frame.width, sprite_frame.height);</strong>\n}\n"},
    {"title": "How sprites work", "iframe": "sprite.html", "iframe_height": 500},
    {"title": "Animate the sprite", "iframe": "example.html?step=2#animate", "code": "window.setInterval(function() {\n sprite.nextFrame();\n}, 1000 / fps);"},
    {"text": "<img src='images/no_mask_fail.png' />"},
    {"title": "Solution: Mask", "iframe": "example.html?step=3"},
    {"title": "With Mask", "iframe": "example.html?step=4", "code": "var mask = new Image();\nmask.src = 'images/foreground.png';\nimage.onload = function() {\n  <strong>context.drawImage(mask, 0, 0, mask.width, mask.height);</strong>\n}\n"},
    {"title": "Improving the animations", "iframe": "example.html?step=4", "code": "function getMilliseconds() { return (new Date()).getTime();\n}\nvar last_tick = getMilliseconds();\nwindow.setInterval(function() {\n  var tick = getMilliseconds();\n  sprite.nextFrame(tick - last_tick);\n  last_tick = tick;\n}, 1000 / fps);"},
    {"title": "Handle Input", "iframe": "example.html?step=5"},
    "Chapter 2: Audio",
    {"title": "HTML5: &lt;audio&gt; Tag", "code": "var sound = new Audio('/sounds/sound.mp3');\nsound.onload = function() { sound.play(); };\n\nvar music = new Audio('/sounds/music.mp3');\nmusic.autoload = true;\nmusic.autoplay = true;"},
    "Problems:",
    "Codec Suport",
    "No Raw audio",
    "No 2D/3D Sound",
    "Hard to do exact timing",
    "Ugly workaround: Flash",
    "Chapter 3: Future",
    "WebGL: OpenGL in JavaScript",
    "Based on OpenGL ES 2.0",
    "Google Native Client: Run native code in a sandbox",
    "Supports OpenGL ES 2.0, just like WebGL",
    "&hellip; but in native C/C++",
    "Just like modern Game Engines:",
    "Core Engine written in C/C++",
    "Game logic in a scripting language",
    "Will allow developers to use their Game Engines to target the Web",
    {"title":"Unity 3D", "text":"<img src='http://unity3d.com/unity/features/images/overview-broad.jpg' /><br /><span class='small'>http://unity3d.com/<span>"},
    "Summary",
    "Great platform for 2D games",
    "Will become a great platform for 3D games",
    "&hellip; as more Browsers support WebGL and Native Client",
    "Audio support <em>sucks</em> (for games)",
    "Thanks for listening!",
    {"title":"Any Questions?","text":"Slides available at<br /><span class='small'>http://github.com/mutle/jsconf_games</span>"}
  ]
}
